apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 20
    buildToolsVersion '20.0.0'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 20
    }

// TODO: re-enable once bug-fix is released
//    jacoco {
//        version = '0.7.2.201409121644'
//    }
//
//    buildTypes {
//        debug {
//            testCoverageEnabled true
//        }
//    }


}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '15.0'
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        group 'Docs'
        description "Generates Javadoc for ${variant.name}."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        exclude "**/internal/**"
    }

    task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: tasks["generate${variant.name.capitalize()}Javadoc"]) {
        group 'Docs'
        description "Generates Javadoc for ${variant.name} in Jar format."
        classifier = 'javadoc'
        from tasks["generate${variant.name.capitalize()}Javadoc"].destinationDir
    }
}

task compileJni(type: GradleBuild) {
    dir = file('../realm-jni')
    tasks = ['buildAndroidJni']
}

tasks.preBuild {
    dependsOn compileJni
}

task distribution {
    javadoc       = file("build/libs/realm-${version}-javadoc.jar")
    realmclasses  = file("build/outputs/aar/realm-${version}.aar")
}

artifacts {
    archives file: distribution.realmclasses, name: "realm", type: 'aar', builtBy: distribution
    archives file: distribution.javadoc, name: "realm", type: 'jar', builtBy: distribution
}

signing {
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { 
                MavenDeployment deployment -> signing.signPom(deployment) 
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "Https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Realm'
                packaging 'jar'
                description 'Realm is a mobile database: a replacement for SQLite, OrmLite, greenDAO or Core Data. Realm lets you build apps faster, build apps that are faster, and craft amazing user experiences.'
                url 'http://realm.io'

                scm {
                    connection 'scm:git:https://github.com/realm/realm-java.git'
                    developerConnection 'scm:git:https://github.com/realm/realm-java.git'
                    url 'https://github.com/realm/realm-java.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'kneth'
                        name 'Kenneth Geisshirt'
                        email 'kg@realm.io'
                    }
                }
            }
        }
    }
}
